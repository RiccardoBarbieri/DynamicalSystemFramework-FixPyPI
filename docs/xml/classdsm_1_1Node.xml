<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdsm_1_1Node" kind="class" language="C++" prot="public">
    <compoundname>dsm::Node</compoundname>
    <includes local="no">Node.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
      <param>
        <type>typename Size</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdsm_1_1Node_1a124030577c8f404078ed5f6798249098" prot="private" static="no" mutable="no">
        <type>std::queue&lt; Id &gt;</type>
        <definition>std::queue&lt;Id&gt; dsm::Node&lt; Id, Size &gt;::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="25" column="16" bodyfile="src/dsm/headers/Node.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Node_1a49cd188fd26c55b797279dbaa3fe199c" prot="private" static="no" mutable="no">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; dsm::Node&lt; Id, Size &gt;::m_coords</definition>
        <argsstring></argsstring>
        <name>m_coords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="26" column="15" bodyfile="src/dsm/headers/Node.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Node_1a95eed9dea5416e53dceb96e07ef33b39" prot="private" static="no" mutable="no">
        <type>Id</type>
        <definition>Id dsm::Node&lt; Id, Size &gt;::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="27" column="8" bodyfile="src/dsm/headers/Node.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Node_1a7f21a0d23e0b212d3a82ea1c35b7d30c" prot="private" static="no" mutable="no">
        <type>Size</type>
        <definition>Size dsm::Node&lt; Id, Size &gt;::m_capacity</definition>
        <argsstring></argsstring>
        <name>m_capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="28" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Node_1ad404de042b6678460f480079e9696d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Node&lt; Id, Size &gt;::Node</definition>
        <argsstring>()=default</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a76d57edf2859550fff5e89f483116ed4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Node&lt; Id, Size &gt;::Node</definition>
        <argsstring>(Id id)</argsstring>
        <name>Node</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node&apos;s id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="34" column="14" bodyfile="src/dsm/headers/Node.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1ad3893b91bf69128f6ed0afac9b5631d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Node&lt; Id, Size &gt;::Node</definition>
        <argsstring>(Id id, std::pair&lt; double, double &gt; coords)</argsstring>
        <name>Node</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::pair&lt; double, double &gt;</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::pair containing the node&apos;s coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="38" column="5" bodyfile="src/dsm/headers/Node.hpp" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a22d01d32d994b2e0ba3e052a628229d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Node&lt; Id, Size &gt;::Node</definition>
        <argsstring>(Id id, std::pair&lt; double, double &gt; coords, std::queue&lt; Id &gt; queue)</argsstring>
        <name>Node</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::pair&lt; double, double &gt;</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>std::queue&lt; Id &gt;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::pair containing the node&apos;s coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::queue containing the node&apos;s queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="43" column="5" bodyfile="src/dsm/headers/Node.hpp" bodystart="92" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a2c641803c500a006e2cca5bf17278e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Node&lt; Id, Size &gt;::setCoords</definition>
        <argsstring>(std::pair&lt; double, double &gt; coords)</argsstring>
        <name>setCoords</name>
        <param>
          <type>std::pair&lt; double, double &gt;</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
<para>Set the node&apos;s coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::pair containing the node&apos;s coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="47" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a32b6910b5b8bd791c4f5d1f066ca02fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Node&lt; Id, Size &gt;::setQueue</definition>
        <argsstring>(std::queue&lt; Id &gt; queue)</argsstring>
        <name>setQueue</name>
        <param>
          <type>std::queue&lt; Id &gt;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Set the node&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>A std::queue containing the node&apos;s queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if the queue size is greater than the node&apos;s capacity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="51" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a358d7185ca6bf337726ca8c1e03028a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Node&lt; Id, Size &gt;::setCapacity</definition>
        <argsstring>(Size capacity)</argsstring>
        <name>setCapacity</name>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Set the node&apos;s capacity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The node&apos;s capacity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="54" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="120" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a832d6b67db630a3ca9e39759d97d8f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Node&lt; Id, Size &gt;::enqueue</definition>
        <argsstring>(Id id)</argsstring>
        <name>enqueue</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Enqueue an id to the node&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id to enqueue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the queue is full </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="58" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1ae9b7659124166acf8a004edc32a62d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; Id &gt;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; std::optional&lt; Id &gt; dsm::Node&lt; Id, Size &gt;::dequeue</definition>
        <argsstring>()</argsstring>
        <name>dequeue</name>
        <briefdescription>
<para>Dequeue an id from the node&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id The dequeued id </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the queue is empty </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="62" column="19" bodyfile="src/dsm/headers/Node.hpp" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a556b11a3863cf561bcd7c82612a66047" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; Id dsm::Node&lt; Id, Size &gt;::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
<para>Get the node&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id, The node&apos;s id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="66" column="8" bodyfile="src/dsm/headers/Node.hpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::pair&lt; double, double &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; const std::pair&lt; double, double &gt; &amp; dsm::Node&lt; Id, Size &gt;::coords</definition>
        <argsstring>() const</argsstring>
        <name>coords</name>
        <briefdescription>
<para>Get the node&apos;s coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;double,, double&gt; A std::pair containing the node&apos;s coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="69" column="21" bodyfile="src/dsm/headers/Node.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1abf3716ce53146e89b20679728d13c2c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::queue&lt; Id &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; const std::queue&lt; Id &gt; &amp; dsm::Node&lt; Id, Size &gt;::queue</definition>
        <argsstring>() const</argsstring>
        <name>queue</name>
        <briefdescription>
<para>Get the node&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::queue&lt;Id&gt;, A std::queue containing the node&apos;s queue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="72" column="22" bodyfile="src/dsm/headers/Node.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a74af84dd8e2a67c7a79cecf952443e7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; Size dsm::Node&lt; Id, Size &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Get the node&apos;s queue capacity. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size The node&apos;s queue capacity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="75" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a26f717c9f122173d69aa6734d41f42c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; bool dsm::Node&lt; Id, Size &gt;::isFull</definition>
        <argsstring>() const</argsstring>
        <name>isFull</name>
        <briefdescription>
<para>Returns true if the node&apos;s queue is full. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool True if the node&apos;s queue is full </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="78" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="171" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> class represents a node in the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the node&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Node.hpp" line="23" column="3" bodyfile="src/dsm/headers/Node.hpp" bodystart="23" bodyend="79"/>
    <listofallmembers>
      <member refid="classdsm_1_1Node_1a74af84dd8e2a67c7a79cecf952443e7a" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>capacity</name></member>
      <member refid="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>coords</name></member>
      <member refid="classdsm_1_1Node_1ae9b7659124166acf8a004edc32a62d6d" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>dequeue</name></member>
      <member refid="classdsm_1_1Node_1a832d6b67db630a3ca9e39759d97d8f87" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>enqueue</name></member>
      <member refid="classdsm_1_1Node_1a556b11a3863cf561bcd7c82612a66047" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>id</name></member>
      <member refid="classdsm_1_1Node_1a26f717c9f122173d69aa6734d41f42c3" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>isFull</name></member>
      <member refid="classdsm_1_1Node_1a7f21a0d23e0b212d3a82ea1c35b7d30c" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_capacity</name></member>
      <member refid="classdsm_1_1Node_1a49cd188fd26c55b797279dbaa3fe199c" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_coords</name></member>
      <member refid="classdsm_1_1Node_1a95eed9dea5416e53dceb96e07ef33b39" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_id</name></member>
      <member refid="classdsm_1_1Node_1a124030577c8f404078ed5f6798249098" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_queue</name></member>
      <member refid="classdsm_1_1Node_1ad404de042b6678460f480079e9696d32" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1a76d57edf2859550fff5e89f483116ed4" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1ad3893b91bf69128f6ed0afac9b5631d6" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1a22d01d32d994b2e0ba3e052a628229d0" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1abf3716ce53146e89b20679728d13c2c8" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>queue</name></member>
      <member refid="classdsm_1_1Node_1a358d7185ca6bf337726ca8c1e03028a7" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>setCapacity</name></member>
      <member refid="classdsm_1_1Node_1a2c641803c500a006e2cca5bf17278e3c" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>setCoords</name></member>
      <member refid="classdsm_1_1Node_1a32b6910b5b8bd791c4f5d1f066ca02fc" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>setQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
