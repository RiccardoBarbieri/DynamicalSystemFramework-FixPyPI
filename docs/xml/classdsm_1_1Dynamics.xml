<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdsm_1_1Dynamics" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>dsm::Dynamics</compoundname>
    <includes local="no">Dynamics.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
      <param>
        <type>typename Size</type>
      </param>
      <param>
        <type>typename Delay</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1ae542b0b2c922ddbaf77620d075e12ea3" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; Id, std::unique_ptr&lt; <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;Id, std::unique_ptr&lt;Itinerary&lt;Id&gt; &gt; &gt; dsm::Dynamics&lt; Id, Size, Delay &gt;::m_itineraries</definition>
        <argsstring></argsstring>
        <name>m_itineraries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="40" column="24" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1a62289a3c2f2fbf7e0d754b9a255e8e4d" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; Id, std::unique_ptr&lt; <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;Id, std::unique_ptr&lt;Agent&lt;Id, Size, Delay&gt; &gt; &gt; dsm::Dynamics&lt; Id, Size, Delay &gt;::m_agents</definition>
        <argsstring></argsstring>
        <name>m_agents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="41" column="24" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1afe55e00bd1c9e4aad44838b9c936c990" prot="protected" static="no" mutable="no">
        <type>TimePoint</type>
        <definition>TimePoint dsm::Dynamics&lt; Id, Size, Delay &gt;::m_time</definition>
        <argsstring></argsstring>
        <name>m_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="42" column="15" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1a9ec3d59e2978d295ec11eba6961be1b6" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classdsm_1_1Graph" kindref="compound">Graph</ref>&lt; Id, Size &gt; &gt;</type>
        <definition>std::unique_ptr&lt;Graph&lt;Id, Size&gt; &gt; dsm::Dynamics&lt; Id, Size, Delay &gt;::m_graph</definition>
        <argsstring></argsstring>
        <name>m_graph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="43" column="21" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1ace9ced4a0e68546ec4749e0f23b4f3db" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Dynamics&lt; Id, Size, Delay &gt;::m_errorProbability</definition>
        <argsstring></argsstring>
        <name>m_errorProbability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="44" column="12" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1af554b6c2c1f960d494b233ee7797035a" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Dynamics&lt; Id, Size, Delay &gt;::m_minSpeedRateo</definition>
        <argsstring></argsstring>
        <name>m_minSpeedRateo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="45" column="12" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1ac978d779ea4624c4cec9f84612996fb6" prot="protected" static="no" mutable="no">
        <type>std::mt19937_64</type>
        <definition>std::mt19937_64 dsm::Dynamics&lt; Id, Size, Delay &gt;::m_generator</definition>
        <argsstring></argsstring>
        <name>m_generator</name>
        <initializer>{std::random_device{}()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="46" column="21" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1ae31a891e1512af4e0b4957f28f87dfad" prot="protected" static="no" mutable="no">
        <type>std::uniform_real_distribution&lt; double &gt;</type>
        <definition>std::uniform_real_distribution&lt;double&gt; dsm::Dynamics&lt; Id, Size, Delay &gt;::m_uniformDist</definition>
        <argsstring></argsstring>
        <name>m_uniformDist</name>
        <initializer>{0., 1.}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="47" column="36" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1a4154e08332de563f3b5d7f1de7b9642d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; unsigned int &gt;</type>
        <definition>std::vector&lt;unsigned int&gt; dsm::Dynamics&lt; Id, Size, Delay &gt;::m_travelTimes</definition>
        <argsstring></argsstring>
        <name>m_travelTimes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="48" column="17" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1a2100eaecbeae07b0e4ef5cb77b4d86bf" prot="public" static="no" mutable="no">
        <type>Tn</type>
        <definition>Tn dsm::Dynamics&lt; Id, Size, Delay &gt;::agents</definition>
        <argsstring></argsstring>
        <name>agents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="131" column="11" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1ac1fdf8dcae5e803dd03dcb92050e95f3" prot="public" static="no" mutable="no">
        <type>Tn</type>
        <definition>Tn dsm::Dynamics&lt; Id, Size, Delay &gt;::ids</definition>
        <argsstring></argsstring>
        <name>ids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="149" column="11" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Dynamics_1a0ef3652b30be7c90e2653288af1d75f1" prot="public" static="no" mutable="no">
        <type>Tn</type>
        <definition>Tn dsm::Dynamics&lt; Id, Size, Delay &gt;::itineraries</definition>
        <argsstring></argsstring>
        <name>itineraries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="167" column="11" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a6496a7873fe94ac7220e60c0b150cb3a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::m_evolveStreets</definition>
        <argsstring>()</argsstring>
        <name>m_evolveStreets</name>
        <briefdescription>
<para>Evolve the streets. </para>
        </briefdescription>
        <detaileddescription>
<para>If possible, removes the first agent of each street queue, putting it in the destination node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1af8335b84663b96c7daf9c667408cc59c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::m_evolveNodes</definition>
        <argsstring>(bool reinsert_agents)</argsstring>
        <name>m_evolveNodes</name>
        <param>
          <type>bool</type>
          <declname>reinsert_agents</declname>
        </param>
        <briefdescription>
<para>Evolve the nodes. </para>
        </briefdescription>
        <detaileddescription>
<para>If possible, removes all agents from each node, putting them in the next street. If the error probability is not zero, the agents can move to a random street. If the agent is in the destination node, it is removed from the simulation (and then reinserted if reinsert_agents is true) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reinsert_agents</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the agents are reinserted in the simulation after they reach their destination </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a84f2e9f7656f704ea1599dc275c48107" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::m_evolveAgents</definition>
        <argsstring>()</argsstring>
        <name>m_evolveAgents</name>
        <briefdescription>
<para>Evolve the agents. </para>
        </briefdescription>
        <detaileddescription>
<para>Puts all new agents on a street, if possible, decrements all delays and increments all travel times. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="62" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a73d71ed25a10d1e2e0ea70f6d7a7c91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::Dynamics</definition>
        <argsstring>()=delete</argsstring>
        <name>Dynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a8572f4b8b2bba7d4288d54974a8d5554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::Dynamics</definition>
        <argsstring>(const Graph&lt; Id, Size &gt; &amp;graph)</argsstring>
        <name>Dynamics</name>
        <param>
          <type>const <ref refid="classdsm_1_1Graph" kindref="compound">Graph</ref>&lt; Id, Size &gt; &amp;</type>
          <declname>graph</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Dynamics" kindref="compound">Dynamics</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>graph</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>graph representing the network </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="68" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a504e2a0d5a3028aa408eb8771bdc2752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::setItineraries</definition>
        <argsstring>(std::span&lt; Itinerary&lt; Id &gt;&gt; itineraries)</argsstring>
        <name>setItineraries</name>
        <param>
          <type>std::span&lt; <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt;&gt;</type>
          <declname>itineraries</declname>
        </param>
        <briefdescription>
<para>Set the itineraries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itineraries</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>itineraries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ae424b81d7e9f6703f28a162256d9fbc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::setSeed</definition>
        <argsstring>(unsigned int seed)</argsstring>
        <name>setSeed</name>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Set the seed for the graph&apos;s random number generator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>seed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a46887e5a88c7786a92d1dc22d407fe64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::setMinSpeedRateo</definition>
        <argsstring>(double minSpeedRateo)</argsstring>
        <name>setMinSpeedRateo</name>
        <param>
          <type>double</type>
          <declname>minSpeedRateo</declname>
        </param>
        <briefdescription>
<para>Set the minim speed rateo, i.e. the minim speed with respect to the speed limit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minSpeedRateo</parametername>
</parameternamelist>
<parameterdescription>
<para>The minim speed rateo </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
<parametername>If</parametername>
</parameternamelist>
<parameterdescription>
<para>the minim speed rateo is not between 0 and 1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ad683bd08176b43f20aa300eaacefa199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::setErrorProbability</definition>
        <argsstring>(double errorProbability)</argsstring>
        <name>setErrorProbability</name>
        <param>
          <type>double</type>
          <declname>errorProbability</declname>
        </param>
        <briefdescription>
<para>Set the error probability. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>errorProbability</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>error probability </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
<parametername>If</parametername>
</parameternamelist>
<parameterdescription>
<para>the error probability is not between 0 and 1 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a95544d85b7d1b176763ab90457923180" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void dsm::Dynamics&lt; Id, Size, Delay &gt;::setAgentSpeed</definition>
        <argsstring>(Size agentId)=0</argsstring>
        <name>setAgentSpeed</name>
        <param>
          <type>Size</type>
          <declname>agentId</declname>
        </param>
        <briefdescription>
<para>Set the speed of an agent. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a pure-virtual function, it must be implemented in the derived classes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agentId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the agent <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="87" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ab7f1056b608e79cab06bce0955627309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::updatePaths</definition>
        <argsstring>()</argsstring>
        <name>updatePaths</name>
        <briefdescription>
<para>Update the paths of the itineraries based on the actual travel times. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="90" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ac2eddc5d43aa3e3a7a6a8a057ad7a6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::evolve</definition>
        <argsstring>(bool reinsert_agents=false)</argsstring>
        <name>evolve</name>
        <param>
          <type>bool</type>
          <declname>reinsert_agents</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Evolve the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para>Evolve the simulation by moving the agents and updating the travel times. In particular:<itemizedlist>
<listitem><para>Move the first agent of each street queue, if possible, putting it in the next node</para>
</listitem><listitem><para>Move the agents from each node, if possible, putting them in the next street and giving them a speed. If the error probability is not zero, the agents can move to a random street. If the agent is in the destination node, it is removed from the simulation (and then reinserted if reinsert_agents is true)</para>
</listitem><listitem><para>Cycle over agents and update their times <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reinsert_agents</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the agents are reinserted in the simulation after they reach their destination </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1aaca095b19606865b51579a9f2ee9b234" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classdsm_1_1Graph" kindref="compound">Graph</ref>&lt; Id, Size &gt; &amp;</type>
        <definition>Size &amp; dsm::Dynamics&lt; Id, Size, Delay &gt;::graph</definition>
        <argsstring>() const</argsstring>
        <name>graph</name>
        <briefdescription>
<para>Get the graph. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const Graph&lt;Id, Size&gt;&amp;, The graph </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="104" column="17" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ae572254a63a9fe0caeae65e5c8f6313d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; Id, std::unique_ptr&lt; <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt; &gt; &gt; &amp;</type>
        <definition>const std::unordered_map&lt;Id, std::unique_ptr&lt;Itinerary&lt;Id&gt; &gt; &gt;&amp; dsm::Dynamics&lt; Id, Size, Delay &gt;::itineraries</definition>
        <argsstring>() const</argsstring>
        <name>itineraries</name>
        <briefdescription>
<para>Get the itineraries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const std::vector&lt;Itinerary&lt;Id&gt;&gt;&amp;, The itineraries </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="107" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a78400c79a28ad0a85eccebc64e42f4ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; Id, std::unique_ptr&lt; <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt; &gt; &gt; &amp;</type>
        <definition>const std::unordered_map&lt;Id, std::unique_ptr&lt;Agent&lt;Id, Size, Delay&gt; &gt; &gt;&amp; dsm::Dynamics&lt; Id, Size, Delay &gt;::agents</definition>
        <argsstring>() const</argsstring>
        <name>agents</name>
        <briefdescription>
<para>Get the agents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const std::vector&lt;Agent&lt;Id&gt;&gt;&amp;, The agents </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="110" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a39a8c7d2ef6e881b204aa46ec13a9020" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TimePoint</type>
        <definition>TimePoint dsm::Dynamics&lt; Id, Size, Delay &gt;::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
<para>Get the time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>TimePoint, The time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="113" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a5b2994e9266359e688fcaa362665a7ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addAgent</definition>
        <argsstring>(const Agent&lt; Id, Size, Delay &gt; &amp;agent)</argsstring>
        <name>addAgent</name>
        <param>
          <type>const <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt; &amp;</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
<para>Add an agent to the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agent</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>agent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a9fe41197bd8816d70c1ea91f0562a1c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addAgent</definition>
        <argsstring>(std::unique_ptr&lt; Agent&lt; Id, Size, Delay &gt;&gt; agent)</argsstring>
        <name>addAgent</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt;&gt;</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
<para>Add an agent to the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agent</parametername>
<parametername>Unique</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the agent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="120" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ab9d0a67e68cf27810c618046b2a6680e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::requires</definition>
        <argsstring>(is_agent_v&lt; Tn &gt; &amp;&amp;...) void addAgents(Tn... agents)</argsstring>
        <name>requires</name>
        <param>
          <type>is_agent_v&lt; Tn &gt; &amp;&amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
<para>Add a pack of agents to the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agents</parametername>
<parametername>Parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>pack of agents </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="124" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a4d84796cc1b97f06774203428e680b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::requires</definition>
        <argsstring>(is_agent_v&lt; T1 &gt; &amp;&amp;(is_agent_v&lt; Tn &gt; &amp;&amp;...)) void addAgents(T1 agent</argsstring>
        <name>requires</name>
        <param>
          <type>is_agent_v&lt; T1 &gt; &amp;&amp;</type>
          <array>is_agent_v&lt; Tn &gt; &amp;&amp;...</array>
        </param>
        <briefdescription>
<para>Add a pack of agents to the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agent</parametername>
<parametername>An</parametername>
</parameternamelist>
<parameterdescription>
<para>agent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>agents</parametername>
<parametername>Parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>pack of agents </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="130" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1af94e4ee5e0150cef5743fc29757b333b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addAgents</definition>
        <argsstring>(std::span&lt; Agent&lt; Id, Size, Delay &gt;&gt; agents)</argsstring>
        <name>addAgents</name>
        <param>
          <type>std::span&lt; <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt;&gt;</type>
          <declname>agents</declname>
        </param>
        <briefdescription>
<para>Add a set of agents to the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agents</parametername>
<parametername>Generic</parametername>
</parameternamelist>
<parameterdescription>
<para>container of agents, represented by an std::span </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="134" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a93b4e45650b44243c8537c3e8f12ef0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addRandomAgents</definition>
        <argsstring>(Size nAgents, bool uniformly=false)</argsstring>
        <name>addRandomAgents</name>
        <param>
          <type>Size</type>
          <declname>nAgents</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>uniformly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Add a set of agents to the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nAgents</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of agents to add </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uniformly</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the agents are added uniformly on the streets </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If there are no itineraries </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a5263eec8314818f852a61de586696352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::removeAgent</definition>
        <argsstring>(Size agentId)</argsstring>
        <name>removeAgent</name>
        <param>
          <type>Size</type>
          <declname>agentId</declname>
        </param>
        <briefdescription>
<para>Remove an agent from the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agentId</parametername>
</parameternamelist>
<parameterdescription>
<para>the id of the agent to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="143" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a5e00a7ef53049c2c8a5ead72bdcaeb8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::requires</definition>
        <argsstring>(std::is_convertible_v&lt; T1, Size &gt; &amp;&amp;(std::is_convertible_v&lt; Tn, Size &gt; &amp;&amp;...)) void removeAgents(T1 id</argsstring>
        <name>requires</name>
        <param>
          <type>std::is_convertible_v&lt; T1, Size &gt; &amp;&amp;</type>
          <array>std::is_convertible_v&lt; Tn, Size &gt; &amp;&amp;...</array>
        </param>
        <briefdescription>
<para>Remove a pack of agents from the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the first agent to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ids</parametername>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>pack of ides of the agents to remove </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="145" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a6ec161c6f02718754f67afcfdebed7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addItinerary</definition>
        <argsstring>(const Itinerary&lt; Id &gt; &amp;itinerary)</argsstring>
        <name>addItinerary</name>
        <param>
          <type>const <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt; &amp;</type>
          <declname>itinerary</declname>
        </param>
        <briefdescription>
<para>Add an itinerary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itinerary</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>itinerary </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="153" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a6791cfe3b6f4c79a090d0d8f6cfd424e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addItinerary</definition>
        <argsstring>(std::unique_ptr&lt; Itinerary&lt; Id &gt;&gt; itinerary)</argsstring>
        <name>addItinerary</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt;&gt;</type>
          <declname>itinerary</declname>
        </param>
        <briefdescription>
<para>Add an itinerary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itinerary</parametername>
<parametername>Unique</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the itinerary </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a3bbbe6a1cc5d090f7e1ff9f304763a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::requires</definition>
        <argsstring>(is_itinerary_v&lt; Tn &gt; &amp;&amp;...) void addItineraries(Tn... itineraries)</argsstring>
        <name>requires</name>
        <param>
          <type>is_itinerary_v&lt; Tn &gt; &amp;&amp;</type>
          <declname>...</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="158" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a109e6e51999da10bd03dc08ca2bda55c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>dsm::Dynamics&lt; Id, Size, Delay &gt;::requires</definition>
        <argsstring>(is_itinerary_v&lt; T1 &gt; &amp;&amp;(is_itinerary_v&lt; Tn &gt; &amp;&amp;...)) void addItineraries(T1 itinerary</argsstring>
        <name>requires</name>
        <param>
          <type>is_itinerary_v&lt; T1 &gt; &amp;&amp;</type>
          <array>is_itinerary_v&lt; Tn &gt; &amp;&amp;...</array>
        </param>
        <briefdescription>
<para>Add a pack of itineraries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...Tn</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itinerary</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...itineraries</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="166" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ac8cf5f50197e63e78b864ac23ab46179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::addItineraries</definition>
        <argsstring>(std::span&lt; Itinerary&lt; Id &gt;&gt; itineraries)</argsstring>
        <name>addItineraries</name>
        <param>
          <type>std::span&lt; <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt;&gt;</type>
          <declname>itineraries</declname>
        </param>
        <briefdescription>
<para>Add a set of itineraries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itineraries</parametername>
<parametername>Generic</parametername>
</parameternamelist>
<parameterdescription>
<para>container of itineraries, represented by an std::span </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="170" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a647fbd791a38d426b5a57ca6bce0df57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Dynamics&lt; Id, Size, Delay &gt;::resetTime</definition>
        <argsstring>()</argsstring>
        <name>resetTime</name>
        <briefdescription>
<para>Reset the simulation time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="173" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a2d2fae3da76e39d43ef23ede0b9c2f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dsm::Dynamics&lt; Id, Size, Delay &gt;::moveAgent</definition>
        <argsstring>(Size agentId)</argsstring>
        <name>moveAgent</name>
        <param>
          <type>Size</type>
          <declname>agentId</declname>
        </param>
        <briefdescription>
<para>Move an agent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agentId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the agent to move </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true If the agent has been moved, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="177" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a98044cdb7f035d58b23f5b5ed3d6acd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Tn</declname>
            <defname>Tn</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classdsm_1_1Dynamics_1ab9d0a67e68cf27810c618046b2a6680e" kindref="member">requires</ref> std::is_invocable_v&lt; F, Tn... &gt; void</type>
        <definition>typename Tn requires std::is_invocable_v&lt; F, Tn... &gt; void dsm::Dynamics&lt; Id, Size, Delay &gt;::evolve</definition>
        <argsstring>(F f, Tn... args)</argsstring>
        <name>evolve</name>
        <param>
          <type>F</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Tn...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Evolve the simulation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the function to call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...Tn</parametername>
</parameternamelist>
<parameterdescription>
<para>The types of the arguments of the function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...args</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments of the function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="186" column="10" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="560" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ab8dd0a0617d83cebcc99cf7da9a1a804" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Dynamics&lt; Id, Size, Delay &gt;::meanSpeed</definition>
        <argsstring>() const</argsstring>
        <name>meanSpeed</name>
        <briefdescription>
<para>Get the mean speed of the agents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The mean speed of the agents </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="190" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1ad589842e58ca1e8949c07ea3c31f837e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Dynamics&lt; Id, Size, Delay &gt;::meanDensity</definition>
        <argsstring>() const</argsstring>
        <name>meanDensity</name>
        <briefdescription>
<para>Get the mean density of the streets. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The mean density of the streets </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="193" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a67ef5b638a8c64cd74f3dfa220a652ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Dynamics&lt; Id, Size, Delay &gt;::meanFlow</definition>
        <argsstring>() const</argsstring>
        <name>meanFlow</name>
        <briefdescription>
<para>Get the mean flow of the streets. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The mean flow of the streets </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="196" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Dynamics_1a860fe4fdd0829efa83006c160e8e3876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Dynamics&lt; Id, Size, Delay &gt;::meanTravelTime</definition>
        <argsstring>() const</argsstring>
        <name>meanTravelTime</name>
        <briefdescription>
<para>Get the mean travel time of the agents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The mean travel time of the agents </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Dynamics.hpp" line="199" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Dynamics" kindref="compound">Dynamics</ref> class represents the dynamics of the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the graph&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the graph&apos;s capacity. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Dynamics.hpp" line="38" column="3" bodyfile="src/dsm/headers/Dynamics.hpp" bodystart="38" bodyend="200"/>
    <listofallmembers>
      <member refid="classdsm_1_1Dynamics_1a5b2994e9266359e688fcaa362665a7ef" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addAgent</name></member>
      <member refid="classdsm_1_1Dynamics_1a9fe41197bd8816d70c1ea91f0562a1c7" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addAgent</name></member>
      <member refid="classdsm_1_1Dynamics_1af94e4ee5e0150cef5743fc29757b333b" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addAgents</name></member>
      <member refid="classdsm_1_1Dynamics_1ac8cf5f50197e63e78b864ac23ab46179" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addItineraries</name></member>
      <member refid="classdsm_1_1Dynamics_1a6ec161c6f02718754f67afcfdebed7da" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addItinerary</name></member>
      <member refid="classdsm_1_1Dynamics_1a6791cfe3b6f4c79a090d0d8f6cfd424e" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addItinerary</name></member>
      <member refid="classdsm_1_1Dynamics_1a93b4e45650b44243c8537c3e8f12ef0f" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>addRandomAgents</name></member>
      <member refid="classdsm_1_1Dynamics_1a2100eaecbeae07b0e4ef5cb77b4d86bf" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>agents</name></member>
      <member refid="classdsm_1_1Dynamics_1a78400c79a28ad0a85eccebc64e42f4ef" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>agents</name></member>
      <member refid="classdsm_1_1Dynamics_1a73d71ed25a10d1e2e0ea70f6d7a7c91a" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>Dynamics</name></member>
      <member refid="classdsm_1_1Dynamics_1a8572f4b8b2bba7d4288d54974a8d5554" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>Dynamics</name></member>
      <member refid="classdsm_1_1Dynamics_1ac2eddc5d43aa3e3a7a6a8a057ad7a6cf" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>evolve</name></member>
      <member refid="classdsm_1_1Dynamics_1a98044cdb7f035d58b23f5b5ed3d6acd1" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>evolve</name></member>
      <member refid="classdsm_1_1Dynamics_1aaca095b19606865b51579a9f2ee9b234" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>graph</name></member>
      <member refid="classdsm_1_1Dynamics_1ac1fdf8dcae5e803dd03dcb92050e95f3" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>ids</name></member>
      <member refid="classdsm_1_1Dynamics_1a0ef3652b30be7c90e2653288af1d75f1" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>itineraries</name></member>
      <member refid="classdsm_1_1Dynamics_1ae572254a63a9fe0caeae65e5c8f6313d" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>itineraries</name></member>
      <member refid="classdsm_1_1Dynamics_1a62289a3c2f2fbf7e0d754b9a255e8e4d" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_agents</name></member>
      <member refid="classdsm_1_1Dynamics_1ace9ced4a0e68546ec4749e0f23b4f3db" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_errorProbability</name></member>
      <member refid="classdsm_1_1Dynamics_1a84f2e9f7656f704ea1599dc275c48107" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_evolveAgents</name></member>
      <member refid="classdsm_1_1Dynamics_1af8335b84663b96c7daf9c667408cc59c" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_evolveNodes</name></member>
      <member refid="classdsm_1_1Dynamics_1a6496a7873fe94ac7220e60c0b150cb3a" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_evolveStreets</name></member>
      <member refid="classdsm_1_1Dynamics_1ac978d779ea4624c4cec9f84612996fb6" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_generator</name></member>
      <member refid="classdsm_1_1Dynamics_1a9ec3d59e2978d295ec11eba6961be1b6" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_graph</name></member>
      <member refid="classdsm_1_1Dynamics_1ae542b0b2c922ddbaf77620d075e12ea3" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_itineraries</name></member>
      <member refid="classdsm_1_1Dynamics_1af554b6c2c1f960d494b233ee7797035a" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_minSpeedRateo</name></member>
      <member refid="classdsm_1_1Dynamics_1afe55e00bd1c9e4aad44838b9c936c990" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_time</name></member>
      <member refid="classdsm_1_1Dynamics_1a4154e08332de563f3b5d7f1de7b9642d" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_travelTimes</name></member>
      <member refid="classdsm_1_1Dynamics_1ae31a891e1512af4e0b4957f28f87dfad" prot="protected" virt="non-virtual"><scope>dsm::Dynamics</scope><name>m_uniformDist</name></member>
      <member refid="classdsm_1_1Dynamics_1ad589842e58ca1e8949c07ea3c31f837e" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>meanDensity</name></member>
      <member refid="classdsm_1_1Dynamics_1a67ef5b638a8c64cd74f3dfa220a652ce" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>meanFlow</name></member>
      <member refid="classdsm_1_1Dynamics_1ab8dd0a0617d83cebcc99cf7da9a1a804" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>meanSpeed</name></member>
      <member refid="classdsm_1_1Dynamics_1a860fe4fdd0829efa83006c160e8e3876" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>meanTravelTime</name></member>
      <member refid="classdsm_1_1Dynamics_1a2d2fae3da76e39d43ef23ede0b9c2f1e" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>moveAgent</name></member>
      <member refid="classdsm_1_1Dynamics_1a5263eec8314818f852a61de586696352" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>removeAgent</name></member>
      <member refid="classdsm_1_1Dynamics_1ab9d0a67e68cf27810c618046b2a6680e" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>requires</name></member>
      <member refid="classdsm_1_1Dynamics_1a4d84796cc1b97f06774203428e680b05" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>requires</name></member>
      <member refid="classdsm_1_1Dynamics_1a5e00a7ef53049c2c8a5ead72bdcaeb8f" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>requires</name></member>
      <member refid="classdsm_1_1Dynamics_1a3bbbe6a1cc5d090f7e1ff9f304763a8f" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>requires</name></member>
      <member refid="classdsm_1_1Dynamics_1a109e6e51999da10bd03dc08ca2bda55c" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>requires</name></member>
      <member refid="classdsm_1_1Dynamics_1a647fbd791a38d426b5a57ca6bce0df57" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>resetTime</name></member>
      <member refid="classdsm_1_1Dynamics_1a95544d85b7d1b176763ab90457923180" prot="public" virt="pure-virtual"><scope>dsm::Dynamics</scope><name>setAgentSpeed</name></member>
      <member refid="classdsm_1_1Dynamics_1ad683bd08176b43f20aa300eaacefa199" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>setErrorProbability</name></member>
      <member refid="classdsm_1_1Dynamics_1a504e2a0d5a3028aa408eb8771bdc2752" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>setItineraries</name></member>
      <member refid="classdsm_1_1Dynamics_1a46887e5a88c7786a92d1dc22d407fe64" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>setMinSpeedRateo</name></member>
      <member refid="classdsm_1_1Dynamics_1ae424b81d7e9f6703f28a162256d9fbc1" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>setSeed</name></member>
      <member refid="classdsm_1_1Dynamics_1a39a8c7d2ef6e881b204aa46ec13a9020" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>time</name></member>
      <member refid="classdsm_1_1Dynamics_1ab7f1056b608e79cab06bce0955627309" prot="public" virt="non-virtual"><scope>dsm::Dynamics</scope><name>updatePaths</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
