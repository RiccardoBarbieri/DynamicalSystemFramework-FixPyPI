<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Node_8hpp" kind="file" language="C++">
    <compoundname>Node.hpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">queue</includes>
    <includes local="no">utility</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">optional</includes>
    <includedby refid="Graph_8hpp" local="yes">src/dsm/headers/Graph.hpp</includedby>
    <includedby refid="Street_8hpp" local="yes">src/dsm/headers/Street.hpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>queue</label>
      </node>
      <node id="6">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="7">
        <label>optional</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="1">
        <label>src/dsm/headers/Node.hpp</label>
        <link refid="Node_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/dsm/headers/Dynamics.hpp</label>
        <link refid="Dynamics_8hpp"/>
      </node>
      <node id="4">
        <label>src/dsm/headers/Street.hpp</label>
        <link refid="Street_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/dsm/headers/Graph.hpp</label>
        <link refid="Graph_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/dsm/headers/Node.hpp</label>
        <link refid="Node_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classdsm_1_1Node" prot="public">dsm::Node</innerclass>
    <innernamespace refid="namespacedsm">dsm</innernamespace>
    <briefdescription>
<para>Defines the Node class. </para>
    </briefdescription>
    <detaileddescription>
<para>This file contains the definition of the Node class. The Node class represents a node in the network. It is templated by the type of the node&apos;s id, which must be an unsigned integral type. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Node_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Node_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dsm<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="23" refid="classdsm_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdsm_1_1Node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::queue&lt;Id&gt;<sp/>m_queue;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;double,<sp/>double&gt;<sp/>m_coords;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>Id<sp/>m_id;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>Size<sp/>m_capacity;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdsm_1_1Node" kindref="compound">Node</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node" kindref="compound">Node</ref>(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdsm_1_1Node" kindref="compound">Node</ref>(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" kindref="member">coords</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdsm_1_1Node" kindref="compound">Node</ref>(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" kindref="member">coords</ref>,<sp/>std::queue&lt;Id&gt;<sp/><ref refid="classdsm_1_1Node_1abf3716ce53146e89b20679728d13c2c8" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a2c641803c500a006e2cca5bf17278e3c" kindref="member">setCoords</ref>(std::pair&lt;double,<sp/>double&gt;<sp/><ref refid="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" kindref="member">coords</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a32b6910b5b8bd791c4f5d1f066ca02fc" kindref="member">setQueue</ref>(std::queue&lt;Id&gt;<sp/><ref refid="classdsm_1_1Node_1abf3716ce53146e89b20679728d13c2c8" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a358d7185ca6bf337726ca8c1e03028a7" kindref="member">setCapacity</ref>(Size<sp/><ref refid="classdsm_1_1Node_1a74af84dd8e2a67c7a79cecf952443e7a" kindref="member">capacity</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a832d6b67db630a3ca9e39759d97d8f87" kindref="member">enqueue</ref>(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;Id&gt;<sp/><ref refid="classdsm_1_1Node_1ae9b7659124166acf8a004edc32a62d6d" kindref="member">dequeue</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>Id<sp/><ref refid="classdsm_1_1Node_1a556b11a3863cf561bcd7c82612a66047" kindref="member">id</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;&amp;<sp/><ref refid="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" kindref="member">coords</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::queue&lt;Id&gt;&amp;<sp/><ref refid="classdsm_1_1Node_1abf3716ce53146e89b20679728d13c2c8" kindref="member">queue</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Size<sp/><ref refid="classdsm_1_1Node_1a74af84dd8e2a67c7a79cecf952443e7a" kindref="member">capacity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a26f717c9f122173d69aa6734d41f42c3" kindref="member">isFull</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classdsm_1_1Node" kindref="compound">Node&lt;Id, Size&gt;::Node</ref>(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>:<sp/>m_id{id},<sp/>m_capacity{1}<sp/>{}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>Node&lt;Id,<sp/>Size&gt;::Node(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>coords)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_coords{std::move(coords)},<sp/>m_id{id},<sp/>m_capacity{1}<sp/>{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>Node&lt;Id,<sp/>Size&gt;::Node(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::pair&lt;double,<sp/>double&gt;<sp/>coords,<sp/>std::queue&lt;Id&gt;<sp/>queue)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_queue{std::move(queue)},<sp/>m_coords{std::move(coords)},<sp/>m_id{id},<sp/>m_capacity{1}<sp/>{}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>Id<sp/><ref refid="classdsm_1_1Node_1a556b11a3863cf561bcd7c82612a66047" kindref="member">Node&lt;Id, Size&gt;::id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a2c641803c500a006e2cca5bf17278e3c" kindref="member">Node&lt;Id, Size&gt;::setCoords</ref>(std::pair&lt;double,<sp/>double&gt;<sp/>coords)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>m_coords<sp/>=<sp/>std::move(coords);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a32b6910b5b8bd791c4f5d1f066ca02fc" kindref="member">Node&lt;Id, Size&gt;::setQueue</ref>(std::queue&lt;Id&gt;<sp/>queue)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue.size()<sp/>&gt;<sp/>m_capacity)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMsg{</highlight><highlight class="stringliteral">&quot;Error<sp/>at<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Node&apos;s<sp/>queue<sp/>capacity<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>queue<sp/>size&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(errorMsg);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_queue<sp/>=<sp/>std::move(queue);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a358d7185ca6bf337726ca8c1e03028a7" kindref="member">Node&lt;Id, Size&gt;::setCapacity</ref>(Size<sp/>capacity)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capacity<sp/>&lt;<sp/>m_queue.size())<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMsg{</highlight><highlight class="stringliteral">&quot;Error<sp/>at<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Node&apos;s<sp/>queue<sp/>capacity<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>current<sp/>queue<sp/>size&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(errorMsg);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>m_capacity<sp/>=<sp/>capacity;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a832d6b67db630a3ca9e39759d97d8f87" kindref="member">Node&lt;Id, Size&gt;::enqueue</ref>(Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_queue.size()<sp/>==<sp/>m_capacity)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>errorMsg{</highlight><highlight class="stringliteral">&quot;Error<sp/>at<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(__LINE__)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>__FILE__<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Node&apos;s<sp/>queue<sp/>is<sp/>fulls&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(errorMsg);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>m_queue.push(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>std::optional&lt;Id&gt;<sp/><ref refid="classdsm_1_1Node_1ae9b7659124166acf8a004edc32a62d6d" kindref="member">Node&lt;Id, Size&gt;::dequeue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_queue.empty())<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>Id<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>m_queue.front();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>m_queue.pop();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>double&gt;&amp;<sp/><ref refid="classdsm_1_1Node_1a7f004b4856ea1db25fdfc6beff7b553c" kindref="member">Node&lt;Id, Size&gt;::coords</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_coords;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::queue&lt;Id&gt;&amp;<sp/><ref refid="classdsm_1_1Node_1abf3716ce53146e89b20679728d13c2c8" kindref="member">Node&lt;Id, Size&gt;::queue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_queue;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>Size<sp/><ref refid="classdsm_1_1Node_1a74af84dd8e2a67c7a79cecf952443e7a" kindref="member">Node&lt;Id, Size&gt;::capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_capacity;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>requires<sp/>std::unsigned_integral&lt;Id&gt;<sp/>&amp;&amp;<sp/>std::unsigned_integral&lt;Size&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Node_1a26f717c9f122173d69aa6734d41f42c3" kindref="member">Node&lt;Id, Size&gt;::isFull</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_queue.size()<sp/>==<sp/>m_capacity;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>template<sp/>&lt;typename<sp/>Id&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>class<sp/>Intersection<sp/>:<sp/>public<sp/>Node&lt;Id,<sp/>Size&gt;<sp/>{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>private:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>m_priority;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>};<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>template<sp/>&lt;typename<sp/>Id&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>class<sp/>Roundabout<sp/>:<sp/>public<sp/>Node&lt;Id,<sp/>Size&gt;<sp/>{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>private:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>m_priority;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>};<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>template<sp/>&lt;typename<sp/>Id&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>class<sp/>TrafficLight<sp/>:<sp/>public<sp/>Node&lt;Id,<sp/>Size&gt;<sp/>{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>private:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>m_priority;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>};<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dsm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/dsm/headers/Node.hpp"/>
  </compounddef>
</doxygen>
